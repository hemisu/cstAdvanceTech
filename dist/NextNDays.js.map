{"version":3,"sources":["../NextNDays.js"],"names":["Month","validYearMonthDayAndN","y","m","d","n","regNum","regNumber","test","Error","isLeapYear","trim","nextNDays","join","parseInt","day","module","exports"],"mappings":"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","file":"NextNDays.js","sourcesContent":["const Month = [\n  [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],    // 平年每月天数\n  [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],    // 闰年每月天数\n];\n\n/**\n * 检验年月日和天数是否符合要求\n * @param y 年\n * @param m 月\n * @param d 日\n * @param n 天数\n */\nfunction validYearMonthDayAndN(y, m, d, n) {\n  let regNum = /^[1-9]\\d*$/;\n  let regNumber = /^-?[0-9]\\d*$/;\n  if (!(regNum.test(y) && regNum.test(m) && regNum.test(d)))   // 正整数\n    throw new Error('年/月/日不是正整数');\n  if (!(/^-?[1-9]\\d*$/.test(n)))    // 整数\n    throw new Error('n不是整数');\n  // 检测月份边界\n  if (m > 12)\n    throw new Error('月份不应超过12月');\n  // 检测日期边界\n  if (d > Month[isLeapYear(y)][m])\n    throw new Error(`\n        月份不应该超过当前月份的最大天数:\n        ${m}月一共有${Month[isLeapYear(y)][m]}天\n        目前输入:${y}/${m}/${d}\n        `.trim());\n}\n\n/**\n * 显示y/m/d 的第n天是\n * @param y 年\n * @param m 月\n * @param d 日\n * @param n 天\n * @returns {string} n天后的日期\n */\nfunction nextNDays(y, m, d, n) {\n  if (n == 0) return [y, m, d].join('/');\n  validYearMonthDayAndN(y, m, d, n);  // 检测输入\n  y = parseInt(y);\n  m = parseInt(m);\n  d = parseInt(d);\n  n = parseInt(n);\n  let day;\n  if (n > 0) {\n    n += (d - 1);\n    d = 1;\n    day = Month[isLeapYear(y)][m];\n    if ((n - day) >= 0) {\n      if (m === 12) {\n        y++;\n        m = 1;\n      } else {\n        m++;\n      }\n      return nextNDays(y, m, d, (n - day));\n    } else {\n      d += n;\n    }\n  } else {\n    if (n + d > 0) {\n      d += n;\n    } else {\n      if (m === 1) {\n        y--;\n        m = 12;\n      } else {\n        m--;\n      }\n      day = Month[isLeapYear(y)][m];\n      return nextNDays(y, m, d, (n + day));\n    }\n  }\n  // console.log(`${y}/${m}/${d}`);\n  return [y, m, d].join('/');\n}\n\n/**\n * 判断是否是闰年\n * @param y 年份\n * @returns {number} 若是闰年 返回1\n */\nfunction isLeapYear(y) {\n  return ( ((y % 4 === 0) && (y % 100 !== 0)) || (y % 400 === 0)) ? 1 : 0;\n}\n\n// try {\n//     console.log(nextNDays(2017, 11, 1, 30));\n//     // console.log(/^-?[1-9]\\d*$/.test(30));\n// } catch (e){\n//     console.log(e);\n// }\n\nmodule.exports = nextNDays;"]}